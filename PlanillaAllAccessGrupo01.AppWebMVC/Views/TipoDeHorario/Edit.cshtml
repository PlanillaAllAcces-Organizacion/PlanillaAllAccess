@model PlanillaAllAccessGrupo01.AppWebMVC.Models.TipodeHorario

@{
    ViewData["Title"] = "Edit";
}
<div class="row justify-content-center">
    <h1 class="display-4 text-warning text-center mb-4"><i class="fas fa-plus-circle"></i> Añadir o modificar días de trabajo al horario</h1>
    <hr class="bg-warning" style="height: 2px;" />

    <div class="col-lg-10 col-xl-8">
        <div class="card shadow-lg p-4">
            <form asp-action="Edit" method="post" onsubmit="return validarFormulario()">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />

                <div id="mensaje-error" class="alert alert-danger mb-4" style="display: none;"></div>

                <div class="form-group">
                    <input asp-for="NombreHorario" class="form-control text-center" />
                    <span asp-validation-for="NombreHorario" class="text-danger"></span>
                </div>
                <br />
                <div class="text-center mb-4">
                    <button type="button" id="add-horario" class="btn btn-success">
                        <i class="fas fa-plus"></i> Añadir día
                    </button>
                </div>

                <div id="horarios-container">
                    @{
                        int i = 0;
                    }
                    @foreach (var horario in Model.Horarios)
                    {
                        <div class="horario-item">
                            <div class="row align-items-center text-center">
                                <div class="col-md-3 mb-1">
                                    <div class="form-group">
                                        <label class="form-label fw-bold">Día</label>
                                        <input name="Horarios[@i].Dias" value="@horario.Dias" class="form-control text-center dia-input" required />
                                    </div>
                                </div>
                                <div class="col-md-2 mb-1">
                                    <div class="form-group">
                                        <label class="form-label fw-bold">Horas</label>
                                        <input name="Horarios[@i].HorasxDia" value="@horario.HorasxDia" class="form-control text-center horas-input" required />
                                    </div>
                                </div>
                                <div class="col-md-3 mb-1">
                                    <div class="form-group">
                                        <label class="form-label fw-bold">Hora Entrada</label>
                                        <input type="time" name="Horarios[@i].HorasEntrada" value="@horario.HorasEntrada.ToString(@"hh\:mm")" class="form-control text-center hora-entrada-input" required />
                                    </div>
                                </div>
                                <div class="col-md-3 mb-1">
                                    <div class="form-group">
                                        <label class="form-label fw-bold">Hora Salida</label>
                                        <input type="time" name="Horarios[@i].HorasSalida" value="@horario.HorasSalida.ToString(@"hh\:mm")" class="form-control text-center hora-salida-input" required />
                                    </div>
                                </div>
                                <div class="col-md-1 text-center">
                                    <button type="button" class="remove-horario btn btn-danger btn-sm">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        i++;
                    }
                </div>
                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Guardar
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Volver
                    </a>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let index = @Model.Horarios.Count;
            const maxInputs = 7;
            const container = document.getElementById("horarios-container");
            const addButton = document.getElementById("add-horario");

            function createNewHorarioElement(currentIndex) {
                const newHorario = document.createElement("div");
                newHorario.classList.add("horario-item");
                newHorario.innerHTML = `
                    <div class="row align-items-center text-center">
                        <div class="col-md-3 mb-1">
                            <div class="form-group">
                                <label class="form-label fw-bold">Día</label>
                                <input name="Horarios[${currentIndex}].Dias" class="form-control text-center dia-input" required />
                            </div>
                        </div>
                        <div class="col-md-2 mb-1">
                            <div class="form-group">
                                <label class="form-label fw-bold">Horas XDía</label>
                                <input name="Horarios[${currentIndex}].HorasxDia" class="form-control text-center horas-input" required />
                            </div>
                        </div>
                        <div class="col-md-3 mb-1">
                            <div class="form-group">
                                <label class="form-label fw-bold">Hora Entrada</label>
                                <input type="time" name="Horarios[${currentIndex}].HorasEntrada" class="form-control text-center hora-entrada-input" required />
                            </div>
                        </div>
                        <div class="col-md-3 mb-1">
                            <div class="form-group">
                                <label class="form-label fw-bold">Hora Salida</label>
                                <input type="time" name="Horarios[${currentIndex}].HorasSalida" class="form-control text-center hora-salida-input" required />
                            </div>
                        </div>
                        <div class="col-md-1 text-center">
                            <button type="button" class="remove-horario btn btn-danger btn-sm">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    </div>
                `;
                return newHorario;
            }

            addButton.addEventListener("click", function () {
                if (index >= maxInputs) {
                    alert("No puedes agregar más de 7 horarios.");
                    return;
                }

                const newHorario = createNewHorarioElement(index);
                container.appendChild(newHorario);
                index++;

                addButton.disabled = (index >= maxInputs);
            });

            container.addEventListener("click", function (e) {
                if (e.target.closest(".remove-horario")) {
                    e.target.closest(".horario-item").remove();
                    index--;
                    addButton.disabled = false;
                }
            });
        });

        function mostrarError(mensaje) {
            const mensajeError = document.getElementById("mensaje-error");
            mensajeError.textContent = mensaje;
            mensajeError.style.display = "block";
        }

        function validarFormulario() {
            return validarDiasRepetidos() && validarMinutosEnHoras();
        }

        function validarDiasRepetidos() {
            let mensajeError = document.getElementById("mensaje-error");
            let inputs = document.querySelectorAll('input[name$="Dias"]');
            let dias = new Set();

            mensajeError.style.display = "none";
            mensajeError.textContent = "";

            for (let input of inputs) {
                let dia = input.value.trim();

                if (!dia) {
                    mostrarError("Por favor, ingresa un día en todos los campos.");
                    return false;
                }
                if (dias.has(dia.toLowerCase())) {
                    mostrarError(`El día "${dia}" está repetido.`);
                    return false;
                }

                dias.add(dia.toLowerCase());
            }

            return true;
        }

        function validarMinutosEnHoras() {
            let mensajeError = document.getElementById("mensaje-error");
            let horarioItems = document.querySelectorAll('.horario-item');

            for (let item of horarioItems) {
                let entrada = item.querySelector('input[name*="HorasEntrada"]');
                let salida = item.querySelector('input[name*="HorasSalida"]');

                if (entrada && salida) {
                    let entradaValue = entrada.value;
                    let salidaValue = salida.value;

                    if (entradaValue && salidaValue) {
                        let minutosEntrada = parseInt(entradaValue.split(':')[1], 10);
                        let minutosSalida = parseInt(salidaValue.split(':')[1], 10);

                        if ((minutosEntrada !== 0 && minutosEntrada !== 30) ||
                            (minutosSalida !== 0 && minutosSalida !== 30)) {
                            mostrarError("Las horas deben tener minutos 00 o 30.");
                            return false;
                        }

                        if (minutosEntrada !== minutosSalida) {
                            mostrarError("La hora de entrada y salida deben tener los mismos minutos.");
                            return false;
                        }
                    } else {
                        mostrarError("Completa todas las horas de entrada y salida.");
                        return false;
                    }
                }
            }

            return true;
        }
    </script>
}